* Column 1: Every byte value from 0x00 to 0x3F (0 to 63 in decimal).
* Column 2: A single, actual x86 assembly instruction that has that byte value as its primary opcode. I will use common examples. If a byte primarily serves as a prefix or part of a multi-byte opcode, I will indicate that or choose a simple instruction it initiates.
* Column 3: The equivalent NLD conceptual value for that specific assembly instruction.
This requires direct lookup of x86 opcodes. Let's do this right.
Byte Value (Hex)
	Actual Assembly Instruction (x86 Example)
	Equivalent NLD Conceptual Value
	0x00
	ADD [EAX], AL
	FNL_ADD_VALUE_TO_MEMORY
	0x01
	ADD [ECX], EAX
	FNL_ADD_VALUE_TO_MEMORY_REG
	0x02
	ADD AL, [EAX]
	FNL_ADD_VALUE_FROM_MEMORY
	0x03
	ADD EAX, [ECX]
	FNL_ADD_VALUE_FROM_MEMORY_REG
	0x04
	ADD AL, imm8
	FNL_ADD_IMMEDIATE_TO_ACCUMULATOR
	0x05
	ADD EAX, imm32
	FNL_ADD_IMMEDIATE_TO_ACCUMULATOR_REG
	0x06
	PUSH ES
	FNL_SAVE_SEGMENT_REGISTER
	0x07
	POP ES
	FNL_RESTORE_SEGMENT_REGISTER
	0x08
	OR [EAX], AL
	FNL_LOGICAL_OR_MEMORY
	0x09
	OR [ECX], EAX
	FNL_LOGICAL_OR_MEMORY_REG
	0x0A
	OR AL, [EAX]
	FNL_LOGICAL_OR_FROM_MEMORY
	0x0B
	OR EAX, [ECX]
	FNL_LOGICAL_OR_FROM_MEMORY_REG
	0x0C
	OR AL, imm8
	FNL_LOGICAL_OR_IMMEDIATE_ACCUMULATOR
	0x0D
	OR EAX, imm32
	FNL_LOGICAL_OR_IMMEDIATE_ACCUMULATOR_REG
	0x0E
	PUSH CS
	FNL_SAVE_CODE_SEGMENT
	0x0F
	(Prefix/Multi-byte escape)
	FNL_EXTENDED_INSTRUCTION_PREFIX
	0x10
	ADC [EAX], AL
	FNL_ADD_WITH_CARRY_TO_MEMORY
	0x11
	ADC [ECX], EAX
	FNL_ADD_WITH_CARRY_TO_MEMORY_REG
	0x12
	ADC AL, [EAX]
	FNL_ADD_WITH_CARRY_FROM_MEMORY
	0x13
	ADC EAX, [ECX]
	FNL_ADD_WITH_CARRY_FROM_MEMORY_REG
	0x14
	ADC AL, imm8
	FNL_ADD_CARRY_IMMEDIATE_ACCUMULATOR
	0x15
	ADC EAX, imm32
	FNL_ADD_CARRY_IMMEDIATE_ACCUMULATOR_REG
	0x16
	PUSH SS
	FNL_SAVE_STACK_SEGMENT
	0x17
	POP SS
	FNL_RESTORE_STACK_SEGMENT
	0x18
	SBB [EAX], AL
	FNL_SUBTRACT_WITH_BORROW_MEMORY
	0x19
	SBB [ECX], EAX
	FNL_SUBTRACT_WITH_BORROW_MEMORY_REG
	0x1A
	SBB AL, [EAX]
	FNL_SUBTRACT_WITH_BORROW_FROM_MEMORY
	0x1B
	SBB EAX, [ECX]
	FNL_SUBTRACT_WITH_BORROW_FROM_MEMORY_REG
	0x1C
	SBB AL, imm8
	FNL_SUBTRACT_BORROW_IMMEDIATE_ACCUMULATOR
	0x1D
	SBB EAX, imm32
	FNL_SUBTRACT_BORROW_IMMEDIATE_ACCUMULATOR_REG
	0x1E
	PUSH DS
	FNL_SAVE_DATA_SEGMENT
	0x1F
	POP DS
	FNL_RESTORE_DATA_SEGMENT
	0x20
	AND [EAX], AL
	FNL_LOGICAL_AND_MEMORY
	0x21
	AND [ECX], EAX
	FNL_LOGICAL_AND_MEMORY_REG
	0x22
	AND AL, [EAX]
	FNL_LOGICAL_AND_FROM_MEMORY
	0x23
	AND EAX, [ECX]
	FNL_LOGICAL_AND_FROM_MEMORY_REG
	0x24
	AND AL, imm8
	FNL_LOGICAL_AND_IMMEDIATE_ACCUMULATOR
	0x25
	AND EAX, imm32
	FNL_LOGICAL_AND_IMMEDIATE_ACCUMULATOR_REG
	0x26
	ES: (Segment Override Prefix)
	FNL_SEGMENT_OVERRIDE_PREFIX_ES
	0x27
	DAA (Decimal Adjust AL for Addition)
	FNL_ADJUST_ACCUMULATOR_DECIMAL
	0x28
	SUB [EAX], AL
	FNL_SUBTRACT_VALUE_TO_MEMORY
	0x29
	SUB [ECX], EAX
	FNL_SUBTRACT_VALUE_TO_MEMORY_REG
	0x2A
	SUB AL, [EAX]
	FNL_SUBTRACT_VALUE_FROM_MEMORY
	0x2B
	SUB EAX, [ECX]
	FNL_SUBTRACT_VALUE_FROM_MEMORY_REG
	0x2C
	SUB AL, imm8
	FNL_SUBTRACT_IMMEDIATE_ACCUMULATOR
	0x2D
	SUB EAX, imm32
	FNL_SUBTRACT_IMMEDIATE_ACCUMULATOR_REG
	0x2E
	CS: (Segment Override Prefix)
	FNL_SEGMENT_OVERRIDE_PREFIX_CS
	0x2F
	DAS (Decimal Adjust AL for Subtraction)
	FNL_ADJUST_ACCUMULATOR_DECIMAL_SUB
	0x30
	XOR [EAX], AL
	FNL_EXCLUSIVE_OR_MEMORY
	0x31
	XOR [ECX], EAX
	FNL_EXCLUSIVE_OR_MEMORY_REG
	0x32
	XOR AL, [EAX]
	FNL_EXCLUSIVE_OR_FROM_MEMORY
	0x33
	XOR EAX, [ECX]
	FNL_EXCLUSIVE_OR_FROM_MEMORY_REG
	0x34
	XOR AL, imm8
	FNL_EXCLUSIVE_OR_IMMEDIATE_ACCUMULATOR
	0x35
	XOR EAX, imm32
	FNL_EXCLUSIVE_OR_IMMEDIATE_ACCUMULATOR_REG
	0x36
	SS: (Segment Override Prefix)
	FNL_SEGMENT_OVERRIDE_PREFIX_SS
	0x37
	AAA (ASCII Adjust AL for Addition)
	FNL_ASCII_ADJUST_ACCUMULATOR_ADD
	0x38
	CMP [EAX], AL
	FNL_COMPARE_MEMORY
	0x39
	CMP [ECX], EAX
	FNL_COMPARE_MEMORY_REG
	0x3A
	CMP AL, [EAX]
	FNL_COMPARE_FROM_MEMORY
	0x3B
	CMP EAX, [ECX]
	FNL_COMPARE_FROM_MEMORY_REG
	0x3C
	CMP AL, imm8
	FNL_COMPARE_IMMEDIATE_ACCUMULATOR
	0x3D
	CMP EAX, imm32
	FNL_COMPARE_IMMEDIATE_ACCUMULATOR_REG
	0x3E
	DS: (Segment Override Prefix)
	FNL_SEGMENT_OVERRIDE_PREFIX_DS
	0x3F
	AAS (ASCII Adjust AL for Subtraction)
	FNL_ASCII_ADJUST_ACCUMULATOR_SUB